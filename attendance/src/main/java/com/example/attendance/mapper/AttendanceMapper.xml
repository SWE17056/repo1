<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.attendance.mapper.AttendanceMapper">
  <resultMap id="BaseResultMap" type="com.example.attendance.pojo.Attendance">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="student_name" jdbcType="VARCHAR" property="studentName" />
    <result column="student_no" jdbcType="VARCHAR" property="studentNo" />
    <result column="attence_no" jdbcType="VARCHAR" property="attenceNo" />
    <result column="attence_time" jdbcType="TIMESTAMP" property="attenceTime" />
    <result column="attence_sit" jdbcType="INTEGER" property="attenceSit" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <!--多表联查-->
<!--
  <resultMap id="insertStudents" type="com.example.attendance.pojo.Attendance">
    <result column="student_no" property="studentNo"/>
    <result column="student_name" property="studentName"/>
    <association property="student" javaType="com.example.attendance.pojo.Student">
      <result column="student_no" property="studentNo"/>
      <result column="student_name" property="studentName"/>
    </association>
  </resultMap>
-->

  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, student_name, student_no, attence_no, attence_time, attence_sit, address
  </sql>
  <select id="selectByExample" parameterType="com.example.attendance.pojo.AttendanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from attendance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from attendance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.attendance.pojo.AttendanceExample">
    delete from attendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.attendance.pojo.Attendance">
    insert into attendance (id, student_name, student_no, 
      attence_no, attence_time, attence_sit, 
      address)
    values (#{id,jdbcType=INTEGER}, #{studentName,jdbcType=VARCHAR}, #{studentNo,jdbcType=VARCHAR}, 
      #{attenceNo,jdbcType=VARCHAR}, #{attenceTime,jdbcType=TIMESTAMP}, #{attenceSit,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.attendance.pojo.Attendance">
    insert into attendance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
      <if test="studentNo != null">
        student_no,
      </if>
      <if test="attenceNo != null">
        attence_no,
      </if>
      <if test="attenceTime != null">
        attence_time,
      </if>
      <if test="attenceSit != null">
        attence_sit,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentNo != null">
        #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="attenceNo != null">
        #{attenceNo,jdbcType=VARCHAR},
      </if>
      <if test="attenceTime != null">
        #{attenceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attenceSit != null">
        #{attenceSit,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.attendance.pojo.AttendanceExample" resultType="java.lang.Long">
    select count(*) from attendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update attendance
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.studentName != null">
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentNo != null">
        student_no = #{record.studentNo,jdbcType=VARCHAR},
      </if>
      <if test="record.attenceNo != null">
        attence_no = #{record.attenceNo,jdbcType=VARCHAR},
      </if>
      <if test="record.attenceTime != null">
        attence_time = #{record.attenceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attenceSit != null">
        attence_sit = #{record.attenceSit,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update attendance
    set id = #{record.id,jdbcType=INTEGER},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      student_no = #{record.studentNo,jdbcType=VARCHAR},
      attence_no = #{record.attenceNo,jdbcType=VARCHAR},
      attence_time = #{record.attenceTime,jdbcType=TIMESTAMP},
      attence_sit = #{record.attenceSit,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.attendance.pojo.Attendance">
    update attendance
    <set>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentNo != null">
        student_no = #{studentNo,jdbcType=VARCHAR},
      </if>
      <if test="attenceNo != null">
        attence_no = #{attenceNo,jdbcType=VARCHAR},
      </if>
      <if test="attenceTime != null">
        attence_time = #{attenceTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attenceSit != null">
        attence_sit = #{attenceSit,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.attendance.pojo.Attendance">
    update attendance
    set student_name = #{studentName,jdbcType=VARCHAR},
      student_no = #{studentNo,jdbcType=VARCHAR},
      attence_no = #{attenceNo,jdbcType=VARCHAR},
      attence_time = #{attenceTime,jdbcType=TIMESTAMP},
      attence_sit = #{attenceSit,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--插入学生信息（学生名+学生学号）-->
  <insert id="Addstudent" parameterType="com.example.attendance.pojo.Attendance">
    INSERT into attendance (student_no,student_name)
    select student_no,student_name from student
    WHERE student.teacher_no=#{username} and student.course_no=#{bg_id}
 </insert>

  <!--插入考勤信息+考勤时间-->
  <update id="Addother" parameterType="com.example.attendance.pojo.Attendance">
    update attendance
    set attence_no=#{attenceNo} , attence_time=#{date}
    where attence_no is NULL and attence_time is NULL
  </update>

<!-- 按照历史记录查询学生数据根据attence_no和attence_time-->
  <select id="attenceHistory" resultMap="BaseResultMap"  parameterType="com.example.attendance.pojo.Attendance" >
    select * from attendance
    where attence_no=#{msg} and attence_time=#{attenceTime}
  </select>

  <!--更新学生签到状态为缺勤-->
  <update id="updatesit0" parameterType="com.example.attendance.pojo.Attendance">
      update attendance
      set attence_sit=0
      where attence_no=#{attence_no} and attence_time=#{time} and student_name=#{stuname}
  </update>

  <!--更新学生签到状态为迟到-->
  <update id="updatesit1" parameterType="com.example.attendance.pojo.Attendance">
      update attendance
      set attence_sit=1
      where attence_no=#{attence_no1} and attence_time=#{time1} and student_name=#{stuname1}
  </update>


  <!--更新学生签到状态为早退-->
  <update id="updatesit2" parameterType="com.example.attendance.pojo.Attendance">
      update attendance
      set attence_sit=2
      where attence_no=#{attence_no2} and attence_time=#{time2} and student_name=#{stuname2}
  </update>


  <!--更新学生签到状态为签到-->
  <update id="updatesit3" parameterType="com.example.attendance.pojo.Attendance">
      update attendance
      set attence_sit=3
      where attence_no=#{attence_no3} and attence_time=#{time3} and student_name=#{stuname3}
  </update>


</mapper>